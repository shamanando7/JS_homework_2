// Задание 1
// Представьте, что у вас есть класс для управления библиотекой. В этом классе будет приватное свойство для хранения списка книг, а также методы для добавления книги, удаления книги и получения информации о наличии книги.

// Класс должен содержать приватное свойство #books, которое инициализируется пустым массивом и представляет собой список книг в библиотеке.

// Реализуйте геттер allBooks, который возвращает текущий список книг.

// Реализуйте метод addBook(title), который позволяет добавлять книгу в список. Если книга с таким названием уже существует в списке, выбросьте ошибку с соответствующим сообщением.

// Реализуйте метод removeBook(title), который позволит удалять книгу из списка по названию. Если книги с таким названием нет в списке, выбросьте ошибку с соответствующим сообщением.

// Реализуйте метод hasBook(title), который будет проверять наличие книги в библиотеке и возвращать true или false в зависимости от того, есть ли такая книга в списке или нет.

// Реализуйте конструктор, который принимает начальный список книг (массив) в качестве аргумента. Убедитесь, что предоставленный массив не содержит дубликатов; в противном случае выбрасывайте ошибку.

class LibraryManager {
    #books;

    constructor(initialBooks = []) {
        // Проверяем дубликаты в начальном списке книг
        if (new Set(initialBooks).size !== initialBooks.length) {
            throw new Error('Начальный список книг содержит дубликаты.');
        }

        // Инициализируем приватное свойство #books
        this.#books = [...initialBooks];
    }

    // Геттер для получения текущего списка книг
    get allBooks() {
        return this.#books;
    }

    // Метод для добавления книги в список
    addBook(title) {
        if (this.#books.includes(title)) {
            throw new Error('Книга с таким названием уже существует в списке.');
        }

        this.#books.push(title);
    }

    // Метод для удаления книги из списка
    removeBook(title) {
        const index = this.#books.indexOf(title);
        if (index !== -1) {
            this.#books.splice(index, 1);
        } else {
            throw new Error('Книги с таким названием нет в списке.');
        }
    }

    // Метод для проверки наличия книги в списке
    hasBook(title) {
        return this.#books.includes(title);
    }
}





























